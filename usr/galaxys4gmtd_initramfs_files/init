#!/stage1/busybox sh

export _PATH="$PATH"
export PATH=/stage1

cd /
busybox date >>/boot.txt
busybox rm init
busybox mount -t proc proc /proc
busybox mount -t sysfs sysfs /sys
busybox mount /dev/block/mmcblk0p1 /sdcard

exec >> /boot.txt
exec 2>&1

busybox echo 'UPGRADE BOOT' >>/boot.txt

# Write u-boot.bin and recovery.img to both boot and recovery
flash_image boot /sdcard/backup/recovery.img
flash_image recovery /sdcard/backup/recovery.img
flash_image u-boot /sdcard/backup/u-boot.bin

# UBI format
ubiformat /dev/mtd/mtd4 -y

# UBI attach
ubiattach -p /dev/mtd/mtd4

# Create UBI volumes for radio, efs, cache, system, datadata
ubimkvol /dev/ubi0 -s 19712KiB -N radio
ubimkvol /dev/ubi0 -s 5888KiB -N efs
ubimkvol /dev/ubi0 -s 40960KiB -N cache
ubimkvol /dev/ubi0 -s 600MiB -N system
ubimkvol /dev/ubi0 -m -N datadata

# copy efs to its own partition
busybox mount -t ubifs ubi0:efs /efs

# verify the md5sum of efs.tar before restore
cd /sdcard/backup/
busybox md5sum -c efs.tar.md5

# save the exit status of md5sum
MD5RESULT=$?
if ! busybox test $MD5RESULT; then
	busybox echo "efs.tar could not be verified." >>/boot.txt
else
	# extract the tar file in the /efs partition
	cd /efs
	busybox tar xf /sdcard/backup/efs.tar
	busybox echo "efs restored"
fi
cd /
busybox sync
busybox umount /efs

busybox cp /boot.txt /sdcard
busybox umount /sdcard

busybox umount /sys
busybox umount /proc

busybox reboot
